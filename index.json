[{"content":"","date":"July 29, 2022","permalink":"/tags/bandit/","section":"Tags","summary":"","title":"Bandit"},{"content":"","date":"July 29, 2022","permalink":"/tags/linux/","section":"Tags","summary":"","title":"Linux"},{"content":"","date":"July 29, 2022","permalink":"/","section":"Omri Bornstein","summary":"","title":"Omri Bornstein"},{"content":"","date":"July 29, 2022","permalink":"/tags/overthewire/","section":"Tags","summary":"","title":"OverTheWire"},{"content":"Prompt # Logging in to bandit26 from bandit25 should be fairly easy The shell for user bandit26 is not /bin/bash, but something else. Find out what it is, how it works and how to break out of it.\nSolution # $ ssh bandit25@bandit.labs.overthewire.org -p 2220 bandit25@bandit.labs.overthewire.org password: uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG bandit25@bandit:~$ ls bandit26.sshkey bandit25@bandit:~$ cat /etc/passwd | grep bandit26 bandit26‚ùå11026:11026:bandit level 26:/home/bandit26:/usr/bin/showtext bandit25@bandit:~$ cat /usr/bin/showtext #!/bin/sh export TERM=linux more ~/text.txt exit 0 bandit25@bandit:~$ exit $ scp -P 2220 bandit25@bandit.labs.overthewire.org:/home/bandit25/bandit26.sshkey bandit26 bandit25@bandit.labs.overthewire.org password: uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG $ chmod 600 bandit26 $ ssh bandit26@bandit.labs.overthewire.org -p 2220 -i bandit26 _ | | | (_) | |__ \\ / / | |__ __ _ _ __ __| |_| |_ ) / /_ | \u0026#39;_ \\ / _` | \u0026#39;_ \\ / _` | | __| / / \u0026#39;_ \\ | |_) | (_| | | | | (_| | | |_ / /| (_) | |_.__/ \\__,_|_| |_|\\__,_|_|\\__|____\\___/ Make terminal window smaller. Connect to bandit26 again. Issue a v command to open a vim session from the more text viewer Issue a :e /etc/bandit\\_pass/bandit26 command to open the password file from the current vim session: 5czgV9L3Xx8JPOyRbXh6lQbmIOWvPT6Z References # MayADevBe. (2022, June 6). OverTheWire Bandit Level 25 - 26. MayADevBe. https://mayadevbe.me/posts/overthewire/bandit/level26/ ","date":"July 29, 2022","permalink":"/posts/overthewire/bandit/level25-26/","section":"Posts","summary":"Prompt # Logging in to bandit26 from bandit25 should be fairly easy The shell for user bandit26 is not /bin/bash, but something else.","title":"OverTheWire Bandit Level 25 - 26"},{"content":"","date":"July 29, 2022","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"July 29, 2022","permalink":"/tags/shell/","section":"Tags","summary":"","title":"shell"},{"content":"","date":"July 29, 2022","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"July 29, 2022","permalink":"/tags/networking/","section":"Tags","summary":"","title":"networking"},{"content":"Prompt # A daemon is listening on port 30002 and will give you the password for bandit25 if given the password for bandit24 and a secret numeric 4-digit PIN code. There is no way to retrieve the PIN code except by going through all of the 10000 combinations, called brute-forcing.\nSolution # $ ssh bandit24@bandit.labs.overthewire.org -p 2220 bandit24@bandit.labs.overthewire.org password: UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ bandit24@bandit:~$ nc localhost 30002 I am the pincode checker for user bandit25. Please enter the password for user bandit24 and the secret pincode on a single line, separated by a space. bandit24@bandit:~$ cd $(mktemp -d) bandit24@bandit:/tmp/tmp.doM3xvTNc4$ for i in {0000..9999}; do echo \u0026#34;UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ $i\u0026#34; \u0026gt;\u0026gt; bandit24.log; done bandit24@bandit:/tmp/tmp.doM3xvTNc4$ cat bandit24.log | nc localhost 30002 \u0026gt; bandit25.log bandit24@bandit:/tmp/tmp.doM3xvTNc4$ grep -v \u0026#34;Wrong!\u0026#34; bandit25.log I am the pincode checker for user bandit25. Please enter the password for user bandit24 and the secret pincode on a single line, separated by a space. Correct! The password of user bandit25 is uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG References # MayADevBe. (2022, May 30). OverTheWire Bandit Level 24 - 25. MayADevBe. https://mayadevbe.me/posts/overthewire/bandit/level25/ ","date":"July 29, 2022","permalink":"/posts/overthewire/bandit/level24-25/","section":"Posts","summary":"Prompt # A daemon is listening on port 30002 and will give you the password for bandit25 if given the password for bandit24 and a secret numeric 4-digit PIN code.","title":"OverTheWire Bandit Level 24 - 25"},{"content":"Prompt # A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.\nSolution # $ ssh bandit23@bandit.labs.overthewire.org -p 2220 bandit23@bandit.labs.overthewire.org password: jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n bandit23@bandit:~$ ls /etc/cron.d/ cronjob_bandit15_root cronjob_bandit17_root cronjob_bandit22 cronjob_bandit23 cronjob_bandit24 cronjob_bandit25_root bandit23@bandit:~$ cat /etc/cron.d/cronjob_bandit24 @reboot bandit24 /usr/bin/cronjob_bandit24.sh \u0026amp;\u0026gt; /dev/null * * * * * bandit24 /usr/bin/cronjob_bandit24.sh \u0026amp;\u0026gt; /dev/null bandit23@bandit:~$ cat /usr/bin/cronjob_bandit24.sh #!/bin/bash myname=$(whoami) cd /var/spool/$myname echo \u0026#34;Executing and deleting all scripts in /var/spool/$myname:\u0026#34; for i in * .*; do if [ \u0026#34;$i\u0026#34; != \u0026#34;.\u0026#34; -a \u0026#34;$i\u0026#34; != \u0026#34;..\u0026#34; ]; then echo \u0026#34;Handling $i\u0026#34; owner=\u0026#34;$(stat --format \u0026#34;%U\u0026#34; ./$i)\u0026#34; if [ \u0026#34;${owner}\u0026#34; = \u0026#34;bandit23\u0026#34; ]; then timeout -s 9 60 ./$i fi rm -f ./$i fi done bandit23@bandit:~$ ls -l /var/spool/ drwxrwx-wx 25 root bandit24 659456 Jul 29 04:32 bandit24 bandit23@bandit:~$ mkdir /tmp/bandit23 bandit23@bandit:~$ chmod 777 /tmp/bandit23 bandit23@bandit:~$ touch /tmp/bandit23/bandit24.txt bandit23@bandit:~$ chmod a+rwx /tmp/bandit23/bandit24.txt bandit23@bandit:~$ printf \u0026#39;#!/bin/bash\\ncat /etc/bandit_pass/bandit24 \u0026gt; /tmp/bandit23/bandit24.txt\\n\u0026#39; \u0026gt; /tmp/bandit23/bandit23.sh bandit23@bandit:~$ chmod +rx /tmp/bandit23/bandit23.sh bandit23@bandit:~$ cp /tmp/bandit23/bandit23.sh /var/spool/bandit24 # wait for a minute bandit23@bandit:~$ cat /tmp/bandit23/bandit24.txt UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ References # MayADevBe. (2022, May 24). OverTheWire Bandit Level 23 - 24. MayADevBe. https://mayadevbe.me/posts/overthewire/bandit/level24/ https://crontab.guru/#*_*_*_*_* ","date":"July 29, 2022","permalink":"/posts/overthewire/bandit/level23-24/","section":"Posts","summary":"Prompt # A program is running automatically at regular intervals from cron, the time-based job scheduler.","title":"OverTheWire Bandit Level 23 - 24"},{"content":"Prompt # A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.\nSolution # $ ssh bandit22@bandit.labs.overthewire.org -p 2220 bandit22@bandit.labs.overthewire.org password: Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI bandit22@bandit:~$ ls /etc/cron.d/ cronjob_bandit15_root cronjob_bandit17_root cronjob_bandit22 cronjob_bandit23 cronjob_bandit24 cronjob_bandit25_root bandit22@bandit:~$ cat /etc/cron.d/cronjob_bandit23 @reboot bandit23 /usr/bin/cronjob_bandit23.sh \u0026amp;\u0026gt; /dev/null * * * * * bandit23 /usr/bin/cronjob_bandit23.sh \u0026amp;\u0026gt; /dev/null bandit22@bandit:~$ cat /usr/bin/cronjob_bandit23.sh #!/bin/bash myname=$(whoami) mytarget=$(echo I am user $myname | md5sum | cut -d \u0026#39; \u0026#39; -f 1) echo \u0026#34;Copying passwordfile /etc/bandit_pass/$myname to /tmp/$mytarget\u0026#34; cat /etc/bandit_pass/$myname \u0026gt; /tmp/$mytarget bandit22@bandit:~$ echo I am user bandit23 | md5sum | cut -d \u0026#39; \u0026#39; -f 1 8ca319486bfbbc3663ea0fbe81326349 bandit22@bandit:~$ cat /tmp/8ca319486bfbbc3663ea0fbe81326349 jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n References # https://crontab.guru/#*_*_*_*_* ","date":"July 29, 2022","permalink":"/posts/overthewire/bandit/level22-23/","section":"Posts","summary":"Prompt # A program is running automatically at regular intervals from cron, the time-based job scheduler.","title":"OverTheWire Bandit Level 22 - 23"},{"content":"Prompt # A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.\nSolution # $ ssh bandit21@bandit.labs.overthewire.org -p 2220 bandit21@bandit.labs.overthewire.org password: gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr bandit21@bandit:~$ ls /etc/cron.d/ cronjob_bandit15_root cronjob_bandit17_root cronjob_bandit22 cronjob_bandit23 cronjob_bandit24 cronjob_bandit25_root bandit21@bandit:~$ cat /etc/cron.d/cronjob_bandit22 @reboot bandit22 /usr/bin/cronjob_bandit22.sh \u0026amp;\u0026gt; /dev/null * * * * * bandit22 /usr/bin/cronjob_bandit22.sh \u0026amp;\u0026gt; /dev/null bandit21@bandit:~$ cat /usr/bin/cronjob_bandit22.sh #!/bin/bash chmod 644 /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv cat /etc/bandit_pass/bandit22 \u0026gt; /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv bandit21@bandit:~$ cat /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI References # https://crontab.guru/#*_*_*_*_* ","date":"July 29, 2022","permalink":"/posts/overthewire/bandit/level21-22/","section":"Posts","summary":"Prompt # A program is running automatically at regular intervals from cron, the time-based job scheduler.","title":"OverTheWire Bandit Level 21 - 22"},{"content":"Prompt # There is a setuid binary in the home directory that does the following:\nIt makes a connection to localhost on the port you specify as a command line argument. It then reads a line of text from the connection and compares it to the password in the previous level (bandit20). If the password is correct, it will transmit the password for the next level (bandit21). $ ssh bandit20@bandit.labs.overthewire.org -p 2220 bandit20@bandit.labs.overthewire.org password: GbKksEFF4yrVs6il55v6gwY5aVje5f0j bandit20@bandit:~$ ls -l -rwsr-x--- 1 bandit21 bandit20 12088 May 7 2020 suconnect bandit20@bandit:~$ echo -n \u0026#34;GbKksEFF4yrVs6il55v6gwY5aVje5f0j\u0026#34; | nc -lp 2222 \u0026amp; [1] 1145 bandit20@bandit:~$ ./suconnect 2222 bandit20@bandit:~$ ./suconnect 2222 Read: GbKksEFF4yrVs6il55v6gwY5aVje5f0j Password matches, sending next password gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr [1]+ Done echo -n \u0026#34;GbKksEFF4yrVs6il55v6gwY5aVje5f0j\u0026#34; | nc -lp 2222 References # MayADevBe. (2022, May 2). OverTheWire Bandit Level 20 - 21. MayADevBe Blog. https://mayadevbe.me/posts/overthewire/bandit/level21/ ","date":"July 29, 2022","permalink":"/posts/overthewire/bandit/level20-21/","section":"Posts","summary":"Prompt # There is a setuid binary in the home directory that does the following:","title":"OverTheWire Bandit Level 20 - 21"},{"content":"Prompt # To gain access to the next level, you should use the setuid binary in the home directory. Execute it without arguments to find out how to use it. The password for this level can be found in the usual place (/etc/bandit_pass), after you have used the setuid binary.\nSolution # $ ssh bandit19@bandit.labs.overthewire.org -p 2220 bandit19@bandit.labs.overthewire.org password: IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x bandit19@bandit:~$ ls -l -rwsr-x--- 1 bandit20 bandit19 7296 May 7 2020 bandit20-do bandit19@bandit:~$ ./bandit20-do Run a command as another user. Example: ./bandit20-do id bandit19@bandit:~$ ./bandit20-do cat /etc/bandit_pass/bandit20 GbKksEFF4yrVs6il55v6gwY5aVje5f0j References # https://en.wikipedia.org/wiki/Setuid ","date":"July 29, 2022","permalink":"/posts/overthewire/bandit/level19-20/","section":"Posts","summary":"Prompt # To gain access to the next level, you should use the setuid binary in the home directory.","title":"OverTheWire Bandit Level 19 - 20"},{"content":"","date":"July 29, 2022","permalink":"/tags/privesc/","section":"Tags","summary":"","title":"privesc"},{"content":"Prompt # The password for the next level is stored in a file readme in the home directory. Unfortunately, someone has modified .bashrc to log you out when you log in with SSH.\nSolution # $ ssh bandit18@bandit.labs.overthewire.org -p 2220 -t \u0026#39;cat readme\u0026#39; bandit18@bandit.labs.overthewire.org password: kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x References # fons, \u0026amp; Raystafarian. (2011, July 5). Run Remote ssh command with Full Login Shell. Super User. https://superuser.com/questions/306530/run-remote-ssh-command-with-full-login-shell ","date":"July 29, 2022","permalink":"/posts/overthewire/bandit/level18-19/","section":"Posts","summary":"Prompt # The password for the next level is stored in a file readme in the home directory.","title":"OverTheWire Bandit Level 18 - 19"},{"content":"Prompt # There are 2 files in the home directory: passwords.old and passwords.new. The password for the next level is in passwords.new and is the only line that has been changed between passwords.old and passwords.new\nSolution # $ ssh bandit17@bandit.labs.overthewire.org -p 2220 bandit17@bandit.labs.overthewire.org password: xLYVMN9WE5zQ5vHacb0sZEVqbrp7nBTn bandit17@bandit:~$ ls passwords.new passwords.old bandit17@bandit:~$ ls -l -rw-r----- 1 bandit18 bandit17 3300 May 7 2020 passwords.new -rw-r----- 1 bandit18 bandit17 3300 May 7 2020 passwords.old bandit17@bandit:~$ diff passwords.old passwords.new 42c42 \u0026lt; w0Yfolrc5bwjS4qw5mq1nnQi6mF03bii --- \u0026gt; kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd ","date":"July 29, 2022","permalink":"/posts/overthewire/bandit/level17-18/","section":"Posts","summary":"Prompt # There are 2 files in the home directory: passwords.","title":"OverTheWire Bandit Level 17 - 18"},{"content":"Prompt # The credentials for the next level can be retrieved by submitting the password of the current level to a port on localhost in the range 31000 to 32000. First find out which of these ports have a server listening on them. Then find out which of those speak SSL and which don‚Äôt. There is only 1 server that will give the next credentials, the others will simply send back to you whatever you send to it.\nSolution # $ ssh bandit16@bandit.labs.overthewire.org -p 2220 bandit16@bandit.labs.overthewire.org password: cluFn7wTiGryunymYOu4RcffSxQluehd bandit16@bandit:~$ nmap --script ssl-cert -p 31000-32000 localhost PORT STATE SERVICE 31046/tcp open unknown 31518/tcp filtered unknown 31691/tcp open unknown 31790/tcp open unknown 31960/tcp open unknown # trial and error bandit16@bandit:~$ echo \u0026#34;cluFn7wTiGryunymYOu4RcffSxQluehd\u0026#34; | openssl s_client -connect localhost:31790 -quiet -verify_quiet Correct! -----BEGIN RSA PRIVATE KEY----- ... -----END RSA PRIVATE KEY----- bandit16@bandit:~$ exit # ... == SSH private key $ echo \u0026#34;...\u0026#34; \u0026gt; bandit17 $ chmod 600 bandit17 $ ssh bandit17@bandit.labs.overthewire.org -p 2220 -i bandit17 bandit17@bandit:~$ cat /etc/bandit_pass/bandit17 xLYVMN9WE5zQ5vHacb0sZEVqbrp7nBTn References # Cordero, K. (2020, August 14). nmap - Enumerating SSL. Kerry Cordero. https://cordero.me/nmap-enumerating-ssl/ ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level16-17/","section":"Posts","summary":"Prompt # The credentials for the next level can be retrieved by submitting the password of the current level to a port on localhost in the range 31000 to 32000.","title":"OverTheWire Bandit Level 16 - 17"},{"content":"Prompt # The password for the next level can be retrieved by submitting the password of the current level to port 30001 on localhost using SSL encryption.\nSolution # $ ssh bandit15@bandit.labs.overthewire.org -p 2220 bandit15@bandit.labs.overthewire.org password: BfMYroe26WYalil77FoDi9qh59eK5xNr bandit15@bandit:~$ echo \u0026#34;BfMYroe26WYalil77FoDi9qh59eK5xNr\u0026#34; | openssl s_client -connect localhost:30001 -quiet -verify_quiet Correct! cluFn7wTiGryunymYOu4RcffSxQluehd References # jww, \u0026amp; (Farber, A.)[https://stackoverflow.com/users/165071/alexander-farber] (2014, April 28). How to send a string to server using s_client. Stack Overflow. https://stackoverflow.com/a/23352363/7148921 ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level15-16/","section":"Posts","summary":"Prompt # The password for the next level can be retrieved by submitting the password of the current level to port 30001 on localhost using SSL encryption.","title":"OverTheWire Bandit Level 15 - 16"},{"content":"Prompt # The password for the next level can be retrieved by submitting the password of the current level to port 30000 on localhost.\nSolution # $ ssh bandit14@bandit.labs.overthewire.org -p 2220 bandit14@bandit.labs.overthewire.org password: 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e bandit14@bandit:~$ curl localhost:30000 Wrong! Please enter the correct current password bandit14@bandit:~$ echo \u0026#34;4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e\u0026#34; | nc localhost 30000 Correct! BfMYroe26WYalil77FoDi9qh59eK5xNr ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level14-15/","section":"Posts","summary":"Prompt # The password for the next level can be retrieved by submitting the password of the current level to port 30000 on localhost.","title":"OverTheWire Bandit Level 14 - 15"},{"content":"Prompt # The password for the next level is stored in /etc/bandit_pass/bandit14 and can only be read by user bandit14. For this level, you don‚Äôt get the next password, but you get a private SSH key that can be used to log into the next level.\nSolution # $ ssh bandit13@bandit.labs.overthewire.org -p 2220 bandit13@bandit.labs.overthewire.org password: 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL bandit13@bandit:~$ ls sshkey.private bandit13@bandit:~$ exit $ scp -P 2220 bandit13@bandit.labs.overthewire.org:/home/bandit13/sshkey.private bandit14 bandit13@bandit.labs.overthewire.org password: 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL $ chmod 600 bandit14 $ ssh bandit14@bandit.labs.overthewire.org -p 2220 -i bandit14 bandit14@bandit:~$ cat /etc/bandit_pass/bandit14 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e References # Goldshteyn, M. (2012, April 26). scp with port number specified. Stack Overflow. https://stackoverflow.com/a/10341062/7148921 ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level13-14/","section":"Posts","summary":"Prompt # The password for the next level is stored in /etc/bandit_pass/bandit14 and can only be read by user bandit14.","title":"OverTheWire Bandit Level 13 - 14"},{"content":"Prompt # The password for the next level is stored in the file data.txt, which is a hexadecimal dump of a file that has been repeatedly compressed. For this level it may be useful to create a directory under /tmp in which you can work using mkdir.\nSolution # $ ssh bandit12@bandit.labs.overthewire.org -p 2220 bandit12@bandit.labs.overthewire.org password: 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu bandit12@bandit:~$ ls data.txt bandit12@bandit:~$ mkdir /tmp/bandit12 bandit12@bandit:~$ cp data.txt /tmp/bandit12 bandit12@bandit:~$ cd /tmp/bandit12 bandit12@bandit:/tmp/bandit12$ xxd -r data.txt data bandit12@bandit:/tmp/bandit12$ file data data: gzip compressed data, was \u0026#34;data2.bin\u0026#34;, last modified: Thu May 7 18:14:30 2020, max compression, from Unix bandit12@bandit:/tmp/bandit12$ mv data data.gz bandit12@bandit:/tmp/bandit12$ gunzip data.gz bandit12@bandit:/tmp/bandit12$ ls data data.txt bandit12@bandit:/tmp/bandit12$ file data data: bzip2 compressed data, block size = 900k bandit12@bandit:/tmp/bandit12$ mv data data.bz2 bandit12@bandit:/tmp/bandit12$ bzip2 -d data.bz2 bandit12@bandit:/tmp/bandit12$ ls data data.txt bandit12@bandit:/tmp/bandit12$ file data data: gzip compressed data, was \u0026#34;data4.bin\u0026#34;, last modified: Thu May 7 18:14:30 2020, max compression, from Unix bandit12@bandit:/tmp/bandit12$ mv data data.gz bandit12@bandit:/tmp/bandit12$ gunzip data.gz bandit12@bandit:/tmp/bandit12$ ls data data.txt bandit12@bandit:/tmp/bandit12$ file data data: POSIX tar archive (GNU) bandit12@bandit:/tmp/bandit12$ tar -xvf data data5.bin bandit12@bandit:/tmp/bandit12$ file data5.bin data5.bin: POSIX tar archive (GNU) bandit12@bandit:/tmp/bandit12$ tar -xvf data5.bin data6.bin bandit12@bandit:/tmp/bandit12$ file data6.bin data6.bin: bzip2 compressed data, block size = 900k bandit12@bandit:/tmp/bandit12$ mv data6.bin data6.bz2 bandit12@bandit:/tmp/bandit12$ bzip2 -d data6.bz2 bandit12@bandit:/tmp/bandit12$ ls data data5.bin data6 data.txt bandit12@bandit:/tmp/bandit12$ file data6 data6: POSIX tar archive (GNU) bandit12@bandit:/tmp/bandit12$ tar -xvf data6 data8.bin bandit12@bandit:/tmp/bandit12$ file data8.bin data8.bin: gzip compressed data, was \u0026#34;data9.bin\u0026#34;, last modified: Thu May 7 18:14:30 2020, max compression, from Unix bandit12@bandit:/tmp/bandit12$ mv data8.bin data8.gz bandit12@bandit:/tmp/bandit12$ gunzip data8.gz bandit12@bandit:/tmp/bandit12$ ls data data5.bin data6 data8 data.txt bandit12@bandit:/tmp/bandit12$ file data8 data8: ASCII text bandit12@bandit:/tmp/bandit12$ cat data8 The password is 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL References # Rosenfield, A. (2011, October 19). Transform hexadecimal information to binary using a Linux command. Stack Overflow. https://stackoverflow.com/a/7826789/7148921 Tucakov, D. (2019, November 14). How To Extract / Unzip .tar.gz Files From Linux Command Line. Knowledge Base by PhoenixNAP. https://phoenixnap.com/kb/extract-tar-gz-files-linux-command-line ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level12-13/","section":"Posts","summary":"Prompt # The password for the next level is stored in the file data.","title":"OverTheWire Bandit Level 12 - 13"},{"content":"","date":"July 28, 2022","permalink":"/tags/cryptography/","section":"Tags","summary":"","title":"cryptography"},{"content":"Prompt # The password for the next level is stored in the file data.txt, where all lowercase and uppercase letters have been rotated by 13 positions\nSolution # $ ssh bandit11@bandit.labs.overthewire.org -p 2220 bandit11@bandit.labs.overthewire.org password: IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR bandit11@bandit:~$ cat data.txt | tr \u0026#39;A-Za-z\u0026#39; \u0026#39;N-ZA-Mn-za-m\u0026#39; The password is 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu References # Esham, B. (2007, September 8). ROT13 Table with Example. Wikimedia Commons. https://commons.wikimedia.org/wiki/File:ROT13_table_with_example.svg Mullen, S., \u0026amp; Ross, C. (2011, March 26). using ROT13 and tr command for having an encrypted email address. Stack Overflow. https://stackoverflow.com/a/5442495/7148921 ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level11-12/","section":"Posts","summary":"Prompt # The password for the next level is stored in the file data.","title":"OverTheWire Bandit Level 11 - 12"},{"content":"Prompt # The password for the next level is stored in the file data.txt, which contains Base64-encoded data\nSolution # $ ssh bandit10@bandit.labs.overthewire.org -p 2220 bandit10@bandit.labs.overthewire.org password: truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk bandit10@bandit:~$ ls data.txt bandit10@bandit:~$ cat data.txt | base64 -d The password is IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level10-11/","section":"Posts","summary":"Prompt # The password for the next level is stored in the file data.","title":"OverTheWire Bandit Level 10 - 11"},{"content":"Prompt # The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several = characters.\nSolution # $ ssh bandit9@bandit.labs.overthewire.org -p 2220 bandit9@bandit.labs.overthewire.org password: UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR bandit9@bandit:~$ ls data.txt bandit9@bandit:~$ strings data.txt | grep -E \u0026#34;={2,}\u0026#34; ========== the*2i4 ========== password Z========== is \u0026amp;========== truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk References # Allan. (2017, December 21). Regex character repeats $n$ or more times in line with grep. Stack Overflow. https://stackoverflow.com/a/47921068/7148921 ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level9-10/","section":"Posts","summary":"Prompt # The password for the next level is stored in the file data.","title":"OverTheWire Bandit Level 9 - 10"},{"content":"","date":"July 28, 2022","permalink":"/tags/regex/","section":"Tags","summary":"","title":"regex"},{"content":"Prompt # The password for the next level is stored in the file data.txt and is the only line of text that occurs only once\nSolution # $ ssh bandit8@bandit.labs.overthewire.org -p 2220 bandit8@bandit.labs.overthewire.org password: cvX2JJa4CFALtqS87jk27qwqGhBM9plV bandit8@bandit:~$ ls data.txt bandit8@bandit:~$ sort data.txt | uniq -c | sort | tail -1 1 UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR References # Reinhart, J. (2014, November 26). sort and count number of occurrence of lines. Unix \u0026amp; Linux Stack Exchange. https://unix.stackexchange.com/a/170044/232245 ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level8-9/","section":"Posts","summary":"Prompt # The password for the next level is stored in the file data.","title":"OverTheWire Bandit Level 8 - 9"},{"content":"Prompt # The password for the next level is stored in the file data.txt next to the word millionth\nSolution # $ ssh bandit7@bandit.labs.overthewire.org -p 2220 bandit7@bandit.labs.overthewire.org password: HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs bandit7@bandit:~$ ls data.txt bandit7@bandit:~$ grep millionth data.txt millionth cvX2JJa4CFALtqS87jk27qwqGhBM9plV ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level7-8/","section":"Posts","summary":"Prompt # The password for the next level is stored in the file data.","title":"OverTheWire Bandit Level 7 - 8"},{"content":"Prompt # The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Solution # $ ssh bandit6@bandit.labs.overthewire.org -p 2220 bandit6@bandit.labs.overthewire.org password: DXjZPULLxYr17uwoI01bNLQbtFemEgo7 bandit6@bandit:~$ find / -user bandit7 -group bandit6 -size 33c 2\u0026gt; /dev/null /var/lib/dpkg/info/bandit7.password bandit6@bandit:~$ cat /var/lib/dpkg/info/bandit7.password HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level6-7/","section":"Posts","summary":"Prompt # The password for the next level is stored somewhere on the server and has all of the following properties:","title":"OverTheWire Bandit Level 6 - 7"},{"content":"Prompt # The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Solution # $ ssh bandit5@bandit.labs.overthewire.org -p 2220 bandit5@bandit.labs.overthewire.org password: koReBOKuIDDepwhWk7jZC0RTdopnAYKh bandit5@bandit:~$ ls inhere bandit5@bandit:~$ ls inhere/ maybehere00 maybehere02 maybehere04 maybehere06 maybehere08 maybehere10 maybehere12 maybehere14 maybehere16 maybehere18 maybehere01 maybehere03 maybehere05 maybehere07 maybehere09 maybehere11 maybehere13 maybehere15 maybehere17 maybehere19 bandit5@bandit:~$ find inhere -type f -size 1033c -exec file {} \\; | grep \u0026#34;:.* ASCII text\u0026#34; inhere/maybehere07/.file2: ASCII text, with very long lines bandit5@bandit:~$ cat inhere/maybehere07/.file2 DXjZPULLxYr17uwoI01bNLQbtFemEgo7 ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level5-6/","section":"Posts","summary":"Prompt # The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:","title":"OverTheWire Bandit Level 5 - 6"},{"content":"Prompt # The password for the next level is stored in the only human-readable file in the inhere directory.\nSolution # $ ssh bandit4@bandit.labs.overthewire.org -p 2220 bandit4@bandit.labs.overthewire.org password: pIwrPrtPN36QITSp3EQaw936yaFoFgAB bandit4@bandit:~$ ls -l inhere bandit4@bandit:~$ ls inhere -file00 -file01 -file02 -file03 -file04 -file05 -file06 -file07 -file08 -file09 bandit4@bandit:~$ find inhere -type f -exec file {} \\; | grep \u0026#34;:.* ASCII text\u0026#34; inhere/-file07: ASCII text bandit4@bandit:~$ cat inhere/-file07 koReBOKuIDDepwhWk7jZC0RTdopnAYKh References # baeldung. (2021, August 20). How To Find Only Text Files in a Directory in Linux. Baeldung on Linux. https://www.baeldung.com/linux/seach-text-files-in-directory ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level4-5/","section":"Posts","summary":"Prompt # The password for the next level is stored in the only human-readable file in the inhere directory.","title":"OverTheWire Bandit Level 4 - 5"},{"content":"Prompt # The password for the next level is stored in a hidden file in the inhere directory.\nSolution # $ ssh bandit3@bandit.labs.overthewire.org -p 2220 bandit3@bandit.labs.overthewire.org password: UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK bandit3@bandit:~$ ls -l inhere bandit3@bandit:~$ ls -a inhere .hidden bandit3@bandit:~$ cat inhere/.hidden pIwrPrtPN36QITSp3EQaw936yaFoFgAB ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level3-4/","section":"Posts","summary":"Prompt # The password for the next level is stored in a hidden file in the inhere directory.","title":"OverTheWire Bandit Level 3 - 4"},{"content":"Prompt # The password for the next level is stored in a file called spaces in this filename located in the home directory\nSolution # $ ssh bandit2@bandit.labs.overthewire.org -p 2220 bandit2@bandit.labs.overthewire.org password: CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9 bandit2@bandit:~$ ls spaces in this filename bandit2@bandit:~$ cat spaces\\ in\\ this\\ filename UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level2-3/","section":"Posts","summary":"Prompt # The password for the next level is stored in a file called spaces in this filename located in the home directory","title":"OverTheWire Bandit Level 2 - 3"},{"content":"Prompt # The password for the next level is stored in a file called - located in the home directory\nSolution # $ ssh bandit1@bandit.labs.overthewire.org -p 2220 bandit1@bandit.labs.overthewire.org password: boJ9jbbUNNfktd78OOpsqOltutMc3MY1 bandit1@bandit:~$ ls - bandit1@bandit:~$ cat ./- CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9 References # Raj, P. (2017, February 12). How to open a - dashed file name using terminal? Stack Overflow. https://stackoverflow.com/a/42187582/7148921 ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level1-2/","section":"Posts","summary":"Prompt # The password for the next level is stored in a file called - located in the home directory","title":"OverTheWire Bandit Level 1 - 2"},{"content":"This is my attempt at OverTheWire\u0026rsquo;s Bandit challenges.\nPrompt # The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0.\nThe password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH.\nSolution # $ ssh bandit0@bandit.labs.overthewire.org -p 2220 bandit0@bandit.labs.overthewire.org password: bandit0 bandit0@bandit:~$ ls readme bandit0@bandit:~$ cat readme boJ9jbbUNNfktd78OOpsqOltutMc3MY1 ","date":"July 28, 2022","permalink":"/posts/overthewire/bandit/level0-1/","section":"Posts","summary":"This is my attempt at OverTheWire\u0026rsquo;s Bandit challenges.","title":"OverTheWire Bandit Level 0 - 1"},{"content":"","date":"July 13, 2022","permalink":"/tags/congo/","section":"Tags","summary":"","title":"Congo"},{"content":"","date":"July 13, 2022","permalink":"/tags/css/","section":"Tags","summary":"","title":"CSS"},{"content":"","date":"July 13, 2022","permalink":"/tags/fonts/","section":"Tags","summary":"","title":"fonts"},{"content":"","date":"July 13, 2022","permalink":"/tags/html/","section":"Tags","summary":"","title":"HTML"},{"content":"","date":"July 13, 2022","permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo"},{"content":"","date":"July 13, 2022","permalink":"/tags/javascript/","section":"Tags","summary":"","title":"JavaScript"},{"content":"","date":"July 13, 2022","permalink":"/tags/markdown/","section":"Tags","summary":"","title":"Markdown"},{"content":"This document summarises how I set-up this website\u0026rsquo;s layout, fonts and typesetting. As a result, I highly recommend the Congo theme for the Hugo static site generator due to its layout, styling and extensibility.\nAdditions to Congo # I added some features because I\u0026rsquo;m not pleased with how Hugo\u0026rsquo;s Shortcode syntax prevents some content from being rendered correctly on external Markdown platforms such as GitHub and GitLab.\nKaTeX # The following layouts/partials/extend-head.html code is based this comment from the Congo Theme discussion board, and this file from Congo Theme\u0026rsquo;s codebase.\n{{$katexCSS := resources.Get \u0026#34;lib/katex/katex.min.css\u0026#34;}} {{$katexCSS := $katexCSS | resources.Fingerprint \u0026#34;sha512\u0026#34;}} \u0026lt;link type=\u0026#34;text/css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;{{$katexCSS.RelPermalink}}\u0026#34; integrity=\u0026#34;{{$katexCSS.Data.Integrity}}\u0026#34;\u0026gt; {{$katexJS := resources.Get \u0026#34;lib/katex/katex.min.js\u0026#34;}} {{$katexJS := $katexJS | resources.Fingerprint \u0026#34;sha512\u0026#34;}} \u0026lt;script defer src=\u0026#34;{{$katexJS.RelPermalink}}\u0026#34; integrity=\u0026#34;{{$katexJS.Data.Integrity}}\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; {{$katexRenderJS := resources.Get \u0026#34;lib/katex/auto-render.min.js\u0026#34;}} {{$katexRenderJS := $katexRenderJS | resources.Fingerprint \u0026#34;sha512\u0026#34;}} \u0026lt;script defer src=\u0026#34;{{$katexRenderJS.RelPermalink}}\u0026#34; integrity=\u0026#34;{{$katexRenderJS.Data.Integrity}}\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; {{ $katexFonts := resources.Match \u0026#34;lib/katex/fonts/*\u0026#34; }} {{ range $katexFonts }} \u0026lt;!-- {{ .RelPermalink }} --\u0026gt; {{ end }} \u0026lt;script\u0026gt; document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, () =\u0026gt; { renderMathInElement(document.body, { delimiters: [ { left: \u0026#39;$$\u0026#39;, right: \u0026#39;$$\u0026#39;, display: true }, { left: \u0026#39;$\u0026#39;, right: \u0026#39;$\u0026#39;, display: false }, ], throwOnError: false }); }); \u0026lt;/script\u0026gt; This change makes the KaTeX CSS and JavaScript files to load by default, and it also enables the single $ delimiter to be used with less future configuration.\nResult # With these configurations added, graphically-complex inline math expressions such as the following can be rendered:\nA second order polynomial euqation can be solved with the formula $\\displaystyle x = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}$ for a quadratic equation of the form $ax^2 + bx + c = 0$, for all $a \\neq 0$. On a spherical surface, the area of a triangle with angles $\\alpha$, $\\beta$ and $\\gamma$ (all measured in radians) is described by the formula $A_t = r^2(\\alpha + \\beta + \\gamma - \\pi)$, when $r$ is the radius of the sphere. Binet\u0026rsquo;s Formula for calculating arbitrary Fibonacci numbers states that $\\displaystyle F_n = \\frac{\\phi^n - (-\\phi)^{-n}}{\\sqrt{5}}$, when $\\displaystyle \\phi = \\frac{1 + \\sqrt{5}}{2}$. The integral of a polynomial of degree $n \\neq -1$ can be calculated by the formula $\\displaystyle \\int x^n dx = \\frac{x^{n + 1}}{n + 1} + C$ In addition, blocks of multi-line mathematical expressions can be rendered:\n$$ \\begin{align*} x \u0026amp;= \\frac{1}{x - 1} \u0026amp; \\text{definition of } \\phi \\\\ x(x - 1) \u0026amp;= 1 \u0026amp; \\times (x - 1) \\\\ x^2 - x \u0026amp;= 1 \u0026amp; a(b \\pm c) = ab \\pm ac \\\\ x^2 - x - 1 \u0026amp;= 0 \u0026amp; -1 \\\\ x \u0026amp;= \\frac{-(-1) \\pm \\sqrt{(-1)^2 - 4 \\cdot (-1)}}{2} \u0026amp; \\text{using } x = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} \\\\ \u0026amp;\u0026amp; \\text{when } ax^2 + bx +c = 0 \\wedge a \\neq 0 \\\\ \u0026amp;= \\frac{1 \\pm \\sqrt{1 + 4}}{2} \u0026amp; \\text{simplification} \\\\ \u0026amp;= \\frac{1 \\pm \\sqrt{5}}{2} \u0026amp; \\text{simplification} \\end{align*} $$\nDue to Hugo\u0026rsquo;s use of the \\ character for text escaping, the sequence \\\\\\ is required instead of \\\\ (at the source-code level) in order to correctly render a line break. Moreover, the align* environment seems to be the most compatible between KaTeX and MathJax. This change does not seem to affect $\\TeX$ rendering in other platforms.\nTechnical Diagrams # The following layouts/partials/extend-head.html code is based on Docsy\u0026rsquo;s diagram support, and implemented similarly to Docsy\u0026rsquo;s implementation, and Congo\u0026rsquo;s implementation, the theme settings are based on Mermaid\u0026rsquo;s documentation.\n{{$mermaidLib := resources.Get \u0026#34;lib/mermaid/mermaid.min.js\u0026#34;}} {{$mermaidConfig := resources.Get \u0026#34;js/mermaid.js\u0026#34;}} {{$mermaidConfig := $mermaidConfig | resources.Minify}} {{$mermaidJS := slice $mermaidLib $mermaidConfig | resources.Concat \u0026#34;js/mermaid.bundle.js\u0026#34; | resources.Fingerprint \u0026#34;sha512\u0026#34;}} \u0026lt;script defer type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;{{$mermaidJS.RelPermalink}}\u0026#34; integrity=\u0026#34;{{$mermaidJS.Data.Integrity}}\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; /** * @type {string} color an RGB tuple that represents a colour in CSS * @returns an RGB CSS function form of the variable */ function tuple2RGB(color) { return `rgb(${getComputedStyle(document.documentElement).getPropertyValue(color)})`; } /** @returns text colour appropriate for colour theme */ function textColor() { switch (document.documentElement.classList.contains(\u0026#34;dark\u0026#34;)) { case true: return \u0026#34;white\u0026#34;; case false: return \u0026#34;black\u0026#34;; } } document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;, () =\u0026gt; { for (const diagram of document.querySelectorAll(\u0026#34;code.language-mermaid\u0026#34;)) { const text = diagram.textContent; const pre = document.createElement(\u0026#34;pre\u0026#34;); pre.classList.add(\u0026#34;mermaid\u0026#34;); pre.textContent = text; diagram.parentElement.replaceWith(pre); } mermaid.initialize({ theme: \u0026#34;base\u0026#34;, themeVariables: { background: tuple2RGB(\u0026#34;--color-neutral\u0026#34;), primaryColor: tuple2RGB(\u0026#34;--color-primary-200\u0026#34;), secondaryColor: tuple2RGB(\u0026#34;--color-secondary-200\u0026#34;), tertiaryColor: tuple2RGB(\u0026#34;--color-neutral-100\u0026#34;), primaryBorderColor: tuple2RGB(\u0026#34;--color-primary-400\u0026#34;), secondaryBorderColor: tuple2RGB(\u0026#34;--color-secondary-400\u0026#34;), tertiaryBorderColor: tuple2RGB(\u0026#34;--color-neutral-400\u0026#34;), lineColor: tuple2RGB(\u0026#34;--color-neutral-600\u0026#34;), textColor: textColor(), loopTextColor: textColor(), primaryTextColor: \u0026#34;black\u0026#34;, fontFamily: \u0026#34;ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,segoe ui,Roboto,helvetica neue,Arial,noto sans,sans-serif\u0026#34;, fontSize: \u0026#34;16px\u0026#34; } }); }); \u0026lt;/script\u0026gt; The following CSS was added to assets/css/custom.css, in order to make the diagram\u0026rsquo;s background colour transparent.\npre.mermaid { background-color: transparent !important; } Result # With these configurations added, diagrams such as the one below can be rendered:\nsequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! Changes to Congo # I was not completely satisfied with some of the styling of the default Congo theme, but luckily, it supports extensive customisations.\nCSS # Horizontal Scrolling # The following CSS was added to assets/css/custom.css in order to disable horizontal scrolling.\nThe single-line width of HTML a tags HTML tags is capped at the screen width. Horizontal scroll is disabled on the HTML body scope. body { overflow-x: hidden; } a { max-width: 100vw !important; word-wrap: break-word !important; } In order to render multi-line math expressions correctly in small-width screens, the following CSS code was added to assets/css/custom.css:\n@media (max-width: 640px) { span.katex-display \u0026gt; * { font-size: 0.65rem !important; } } In order to ensure search results don\u0026rsquo;t overflow the intended width, the maximum width is restricted accordingly.\n#search-results \u0026gt; li \u0026gt; a \u0026gt; * { max-width: calc(100% - 1.5rem) !important; word-wrap: break-word !important; } Fixed-Width Font # The following CSS was added to assets/css/custom.css (based on this Stack Overflow comment) in order to set Fira Code/Cascadia Code (or the OS\u0026rsquo;s default) as the fixed-width font, used in code snippets.\n@font-face { font-family: \u0026#39;Fira Code\u0026#39;; src: local(\u0026#39;FiraCode-Regular\u0026#39;), url(\u0026#39;/FiraCode-Regular.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } code { font-family: \u0026#39;Cascadia Code\u0026#39;, \u0026#39;Fira Code\u0026#39;, monospace !important; } Result # Multi-character syntax tokens such as :=, ++, != and \u0026lt;- should be rendered in a more graphic manner.\nfunc main() { q := make(chan int) for i := 1; i \u0026lt; 5; i++ { if i != 2 { q \u0026lt;- i } } } Backtick-less Inline Code Snippets # The following CSS was added to assets/css/custom.css in order to revert Congo Theme\u0026rsquo;s main.css that surrounds inline code snippets with backtick symbols.\n.prose :where(code):not(:where([class~=\u0026#34;not-prose\u0026#34;] *))::before { content: unset !important; } .prose :where(code):not(:where([class~=\u0026#34;not-prose\u0026#34;] *))::after { content: unset !important; } Quote-less Block Quote # The following CSS was added to assets/css/custom.css in order to revert Congo Theme\u0026rsquo;s main.css that surrounds block quote with literal quotes.\n.prose :where(blockquote p:first-of-type):not(:where([class~=\u0026#34;not-prose\u0026#34;] *))::before { content: unset !important; } .prose :where(blockquote p:last-of-type):not(:where([class~=\u0026#34;not-prose\u0026#34;] *))::after { content: unset !important; } Nested Unordered Lists # The following CSS was added to assets/css/custom.css in order to set the second nested unordered list item bullet style as a square instead of a circle\nul \u0026gt; li \u0026gt; ul { list-style-type: square !important; } Content Width # The following CSS was added to assets/css/custom.css in order to increase the content width. Based on Congo Theme\u0026rsquo;s main.css.\n.max-w-7xl { max-width: 100rem !important; } .max-w-prose { max-width: 100ch !important; } Colour Scheme # The following CSS was added to assets/css/schemes/fruit.css (based on Congo\u0026rsquo;s congo.css and fire.css) change the colour scheme primary and secondary colours from violate-fuchsia to orange-red.\n:root { --color-neutral: 255, 255, 255; /* Gray */ --color-neutral-50: 250, 250, 250; --color-neutral-100: 244, 244, 245; --color-neutral-200: 228, 228, 231; --color-neutral-300: 212, 212, 216; --color-neutral-400: 161, 161, 170; --color-neutral-500: 113, 113, 122; --color-neutral-600: 82, 82, 91; --color-neutral-700: 63, 63, 70; --color-neutral-800: 39, 39, 42; --color-neutral-900: 24, 24, 27; /* Orange */ --color-primary-50: 255, 247, 237; --color-primary-100: 255, 237, 213; --color-primary-200: 254, 215, 170; --color-primary-300: 253, 186, 116; --color-primary-400: 251, 146, 60; --color-primary-500: 249, 115, 22; --color-primary-600: 234, 88, 12; --color-primary-700: 194, 65, 12; --color-primary-800: 154, 52, 18; --color-primary-900: 124, 45, 18; /* Rose */ --color-secondary-50: 255, 241, 242; --color-secondary-100: 255, 228, 230; --color-secondary-200: 254, 205, 211; --color-secondary-300: 253, 164, 175; --color-secondary-400: 251, 113, 133; --color-secondary-500: 244, 63, 94; --color-secondary-600: 225, 29, 72; --color-secondary-700: 190, 18, 60; --color-secondary-800: 159, 18, 57; --color-secondary-900: 136, 19, 55; } Configuration # Hugo # The following YAML snippets are taken from my config.yml, and always start from the root level of the YAML tree.\nDependencies # I import the Congo library using Hugo Modules.\nmodule: imports: - path: github.com/jpanther/congo/v2 Markup # Syntax highlighting is configured to enable the copy button. The table of contents renders every heading in order. markup: highlight: noClasses: false goldmark: renderer: unsafe: true tableOfContents: startLevel: 1 endLevel: 6 Privacy # All supported social media integrations are disabled for privacy purposes.\nprivacy: disqus: disable: true googleAnalytics: disable: true youtube: disable: true instagram: disable: true twitter: disable: true vimeo: disable: true Other # I set the base URL for GitHub Pages compatibility. I set the timezone, in order to prevent pages with \u0026ldquo;future\u0026rdquo; dates from not rendering immediately. Hugo outputs are configured in order to enable content search. baseURL: https://applegamer22.github.io timeZone: Australia/Melbourne defaultContentLanguage: en title: Omri Bornstein paginate: 15 summaryLength: 0 outputs: home: - HTML - RSS - JSON Congo # Metadata # Basic information about me and the website is configured such that browser citation plugins can get the correct information.\nlanguages: en: languageName: English languageCode: en isoCode: en rtl: false weight: 1 title: Omri Bornstein description: Omri Bornstein\u0026#39;s personal website author: name: Omri Bornstein Menu # The menu links and their order are set-up as follows:\nlanguages: en: menu: main: - name: Blog pageRef: posts weight: 1 - name: Projects pageRef: projects weight: 2 - name: Tags pageRef: tags weight: 3 Articles # The following article metadata is shown: table of contents taxonomies word count date added/updated git repository hyperlink params: article: showBreadcrumbs: true showTableOfContents: true showTaxonomies: true showWordCount: true showEdit: true showDateUpdated: true editURL: https://github.com/AppleGamer22/applegamer22.github.io/tree/master/content Other # These configurations are in this section because they do not fit in a coherent category:\nColour scheme The dark mode appearance is marked as preferred The code copying button is enabled on multi-line code blocks Content search is enabled Recent posts from the blog are shown in the homepage The homepage is rendered as profile configuration A table of contents is shown for every list page params: colorScheme: fruit defaultAppearance: dark enableCodeCopy: true enableSearch: true mainSections: - \u0026#34;posts\u0026#34; homepage: layout: profile showRecent: true list: showTableOfContents: true ","date":"July 13, 2022","permalink":"/posts/congo/","section":"Posts","summary":"This document summarises how I set-up this website\u0026rsquo;s layout, fonts and typesetting.","title":"My Hugo \u0026 Congo Configuration"},{"content":"","date":"July 13, 2022","permalink":"/tags/tex/","section":"Tags","summary":"","title":"TeX"},{"content":"","date":"July 13, 2022","permalink":"/tags/typesetting/","section":"Tags","summary":"","title":"typesetting"},{"content":"","date":"July 13, 2022","permalink":"/tags/yaml/","section":"Tags","summary":"","title":"YAML"},{"content":"Current Projects # Go # cocainate is a cross-platform re-implementation of the macOS utility caffeinate that keeps the screen turned on either until stopped, for a set duration of time or while another process still runs. stalk is a cross-platform file-watcher that can run a command after each file-system operation on a given files or simply wait once until a file is changed. raker is a social media scraper that is interfaced via a server-side rendered HTML user interface (or a CLI), and is managed by a REST API and a NoSQL database. ctftime-discord-bot is a discord bot I made for the MonSec Discord server, that fetches statistics about competing teams from CTFtime, and displays them in the Discord interface. Other Projects # Research # As part of the FIT2082 unit, I contributed to an existing codebase, based on prior research by (Gange, Harabor and Stuckey, 2021) about Lazy CBS, their Multi-Agent Path Finding (MAPF) algorithm. My task was to modify the Lazy CBS codebase such that the algorithm also outputs the final set of constraints that is used to rule out paths, such that the Lazy CBS is formally an Explainable Multi-Agent Path Finding (XMAPF) algorithm. I learned how to enable Python-to-C++ bindings, such that the compiled Lazy CBS codebase can be used as a Python-facing library for future projects. TypeScript \u0026amp; JavaScript # scr-web (and its scr-cli counterpart) is my previous attempt at building a full-stack social media scraper, with Angular on the front-end, and Nest on the back-end. Kotlin # sp is my first attempt at building a Minecraft server plugin. This plugin adds the requirement that the player supplies the password (via a server command) before proper server interaction is allowed, and as long as the password isn‚Äôt provided, the currently-unauthorized player is blinded and immobile. Statistics # Project Stars Forks Issues PRs Version cocainate stalk raker scr-web scr-cli sp FIT2082 ","date":"July 2, 2022","permalink":"/projects/","section":"Projects","summary":"Current Projects # Go # cocainate is a cross-platform re-implementation of the macOS utility caffeinate that keeps the screen turned on either until stopped, for a set duration of time or while another process still runs.","title":"Projects"},{"content":"","date":"May 8, 2022","permalink":"/tags/bootstrap/","section":"Tags","summary":"","title":"Bootstrap"},{"content":"","date":"May 8, 2022","permalink":"/tags/cli/","section":"Tags","summary":"","title":"cli"},{"content":"","date":"May 8, 2022","permalink":"/tags/client/","section":"Tags","summary":"","title":"client"},{"content":"","date":"May 8, 2022","permalink":"/tags/docker/","section":"Tags","summary":"","title":"Docker"},{"content":"","date":"May 8, 2022","permalink":"/tags/full-stack/","section":"Tags","summary":"","title":"full-stack"},{"content":"","date":"May 8, 2022","permalink":"/tags/go/","section":"Tags","summary":"","title":"Go"},{"content":"","date":"May 8, 2022","permalink":"/tags/macos/","section":"Tags","summary":"","title":"macOS"},{"content":"","date":"May 8, 2022","permalink":"/projects/rake/","section":"Projects","summary":"","title":"raker"},{"content":"","date":"May 8, 2022","permalink":"/tags/server/","section":"Tags","summary":"","title":"server"},{"content":"","date":"May 8, 2022","permalink":"/projects/stalk/","section":"Projects","summary":"","title":"stalk"},{"content":"","date":"May 8, 2022","permalink":"/tags/utility/","section":"Tags","summary":"","title":"utility"},{"content":"","date":"May 8, 2022","permalink":"/tags/windows/","section":"Tags","summary":"","title":"Windows"},{"content":"","date":"March 12, 2022","permalink":"/projects/cocainate/","section":"Projects","summary":"","title":"cocainate"},{"content":"","date":"December 21, 2021","permalink":"/projects/ctftime-discord-bot/","section":"Projects","summary":"","title":"ctftime-discord-bot"},{"content":"","date":"December 21, 2021","permalink":"/tags/discord/","section":"Tags","summary":"","title":"discord"},{"content":"","date":"August 20, 2021","permalink":"/tags/c/","section":"Tags","summary":"","title":"C"},{"content":"","date":"August 20, 2021","permalink":"/tags/c++/","section":"Tags","summary":"","title":"C++"},{"content":"","date":"August 20, 2021","permalink":"/projects/fit2082/","section":"Projects","summary":"","title":"FIT2082 computer science research project"},{"content":"","date":"August 20, 2021","permalink":"/tags/mapf/","section":"Tags","summary":"","title":"MAPF"},{"content":"","date":"August 20, 2021","permalink":"/tags/python/","section":"Tags","summary":"","title":"Python"},{"content":"","date":"August 20, 2021","permalink":"/tags/research/","section":"Tags","summary":"","title":"research"},{"content":"","date":"August 20, 2021","permalink":"/tags/xmapf/","section":"Tags","summary":"","title":"XMAPF"},{"content":"","date":"May 31, 2021","permalink":"/tags/angstromctf/","section":"Tags","summary":"","title":"angstromCTF"},{"content":"Prompt # Clam decided to return to classic cryptography and revisit the XOR cipher! Here\u0026rsquo;s some hex encoded cipher text:\nae27eb3a148c3cf031079921ea3315cd27eb7d02882bf724169921eb3a469920e07d0b883bf63c018869a5090e8868e331078a68ec2e468c2bf13b1d9a20ea0208882de12e398c2df60211852deb021f823dda35079b2dda25099f35ab7d218227e17d0a982bee7d098368f13503cd27f135039f68e62f1f9d3cea7c The key is 5 bytes long, and the flag is somewhere in the message.\nAnalysis # Assuming 2 hexadecimal digits are equivalent to 1 ASCII characters, a possible key can be found by XORing the ciphertext with the known 5-bytes long substring actf{.\nSolution # In an XOR Cipher, it is known that possible_key = ciphertext ^ known_cleartext. The python script attached:\nslices the ciphertext to all possible 5 characters-long (assuming 2 hexadecimal digits are equivalent to 1 ASCII characters) sections, computes possible_key = ciphertext ^ known_cleartext, for a known substring of actf{, expands the key to the ASCII length of the message, rotates the key to deal with cases where the known clear text is not in an index that is a multiple of the key length. Thanks to @Levon for this suggestion. recomputes the XOR to possibly decode the message and prints the possible message as ASCII. Initial Python Code # from typing import List from doctest import testmod from textwrap import wrap def xor(s: List[int], t: List[int]) -\u0026gt; List[int]: \u0026#34;\u0026#34;\u0026#34; :param s: list of non-negative integers :param t: list of non-negative integers :return: XOR of the ith number of both lists \u0026#34;\u0026#34;\u0026#34; return [a ^ b for a, b in zip(s, t)] def expand_key(short_key: List[int], size: int) -\u0026gt; List[int]: \u0026#34;\u0026#34;\u0026#34; :param short_key: list of non-negative integers :param size: positive integer :return: short_key * (size // len(short_key)) + short_key[:size - len(key_expanded)] \u0026gt;\u0026gt;\u0026gt; expand_key([1, 2, 3, 4, 5], 9) [1, 2, 3, 4, 5, 1, 2, 3, 4] \u0026#34;\u0026#34;\u0026#34; assert size \u0026gt; len(short_key) key_expanded = short_key * (size // len(short_key)) for ii in range(size - len(key_expanded)): key_expanded.append(short_key[ii]) return key_expanded ciphertext_text = input(\u0026#34;hex-encoded ciphertext: \u0026#34;) known_cleartext = input(\u0026#34;known cleartext (with length of key): \u0026#34;) hint = input(\u0026#34;hint (such as \u0026#39;flag\u0026#39;): \u0026#34;) cipher_ascii = [int(letter, 16) for letter in wrap(ciphertext_text, 2)] known_cleartext_ascii = [ord(letter) for letter in known_cleartext] for i in range(len(cipher_ascii) - len(known_cleartext)): key = xor(cipher_ascii[i:i + len(known_cleartext)], known_cleartext_ascii) expanded_key = expand_key(key, len(cipher_ascii)) message_ascii = xor(cipher_ascii, expanded_key) message_text = \u0026#34;\u0026#34;.join(map(chr, message_ascii)) if known_cleartext in message_text and hint in message_text: print(f\u0026#34;key: {key} (\u0026#39;{\u0026#39;\u0026#39;.join(map(chr, key))}\u0026#39;)\u0026#34;) print(f\u0026#34;message: {message_text}\u0026#34;) print() Improved Python Code # from typing import TypedDict, List from textwrap import wrap from pwn import xor class XORSolution(TypedDict): key: List[int] cleartext: str def decode_xor(ciphertext_hex: str, known_cleartext: str, hint: str) -\u0026gt; List[XORSolution]: output = [] cipher_ascii = bytes(int(letter, 16) for letter in wrap(ciphertext_hex, 2)) for i in range(len(cipher_ascii)): key = list(xor(cipher_ascii[i:i + len(known_cleartext)], known_cleartext.encode())) for ii in range(len(key)): rotated_key = key[-ii:] + key[:-ii] cleartext = str(xor(cipher_ascii, rotated_key))[2:-1] if known_cleartext in cleartext and hint in cleartext: output.append({\u0026#34;key\u0026#34;: rotated_key, \u0026#34;cleartext\u0026#34;: cleartext}) return output Python Script Output # A Python script that prints all valid solutions for the full ciphertext and the ciphertext without the first character: ciphertext_hex1 = \u0026#34;ae27eb3a148c3cf031079921ea3315cd27eb7d02882bf724169921eb3a469920e07d0b883bf63c018869a5090e8868e331078a68ec2e468c2bf13b1d9a20ea0208882de12e398c2df60211852deb021f823dda35079b2dda25099f35ab7d218227e17d0a982bee7d098368f13503cd27f135039f68e62f1f9d3cea7c\u0026#34; known_cleartext1 = \u0026#34;actf{\u0026#34; hint1 = \u0026#34;flag\u0026#34; for solution in decode_xor(ciphertext_hex1, known_cleartext1, hint1): print(f\u0026#34;key: {solution[\u0026#39;key\u0026#39;]})\u0026#34;) print(f\u0026#34;message: {solution[\u0026#39;cleartext\u0026#39;]}\u0026#34;) for solution in decode_xor(ciphertext_hex1[2:], known_cleartext1, hint1): print(f\u0026#34;key: {solution[\u0026#39;key\u0026#39;]})\u0026#34;) print(f\u0026#34;message: {solution[\u0026#39;cleartext\u0026#39;]}\u0026#34;) The output of the screen described immediately above: key: [237, 72, 133, 93, 102]) message: Congratulations on decrypting the message! The flag is actf{who_needs_aes_when_you_have_xor}. Good luck on the other crypto! key: [72, 133, 93, 102, 237]) message: ongratulations on decrypting the message! The flag is actf{who_needs_aes_when_you_have_xor}. Good luck on the other crypto! Flag: actf{who_needs_aes_when_you_have_xor}\nReferences # Szyma≈Ñski, ≈Å. (2021). √•ngstromCTF 2021: Exclusive Cipher. szymanski.ninja. https://szymanski.ninja/en/ctfwriteups/2021/angstromctf/exclusive-cipher/ ","date":"May 31, 2021","permalink":"/posts/angstromctf/exclusive-cipher/","section":"Posts","summary":"Prompt # Clam decided to return to classic cryptography and revisit the XOR cipher!","title":"√•ngstromCTF Exclusive Cipher"},{"content":"","date":"June 29, 2020","permalink":"/tags/kotlin/","section":"Tags","summary":"","title":"Kotlin"},{"content":"","date":"June 29, 2020","permalink":"/tags/minecraft/","section":"Tags","summary":"","title":"Minecraft"},{"content":"","date":"June 29, 2020","permalink":"/projects/sp/","section":"Projects","summary":"","title":"sp"},{"content":"","date":"September 30, 2019","permalink":"/tags/angular/","section":"Tags","summary":"","title":"Angular"},{"content":"","date":"September 30, 2019","permalink":"/tags/ionic/","section":"Tags","summary":"","title":"Ionic"},{"content":"","date":"September 30, 2019","permalink":"/tags/nestjs/","section":"Tags","summary":"","title":"NestJS"},{"content":"","date":"September 30, 2019","permalink":"/tags/nx/","section":"Tags","summary":"","title":"Nx"},{"content":"","date":"September 30, 2019","permalink":"/projects/scr-web/","section":"Projects","summary":"","title":"scr-web"},{"content":"","date":"September 30, 2019","permalink":"/tags/typescript/","section":"Tags","summary":"","title":"TypeScript"},{"content":"","date":"April 18, 2019","permalink":"/projects/scr-cli/","section":"Projects","summary":"","title":"scr-cli"},{"content":"","date":"January 1, 1","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"}]